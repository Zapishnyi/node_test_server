"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.authRouter = void 0;
const express_1 = require("express");
const auth_controller_1 = require("../controllers/auth.controller");
const tokenTypeList_enum_1 = require("../enums/tokenTypeList.enum");
const auth_check_1 = require("../middlewares/auth.check");
const validate_1 = require("../middlewares/validate");
const user_validator_1 = require("../validators/user.validator");
const router = (0, express_1.Router)();
router.post("/sing-up", (0, validate_1.validate)(user_validator_1.validUser.singUp), auth_controller_1.authController.singUp);
router.get("/login", (0, validate_1.validate)(user_validator_1.validUser.login), auth_check_1.auth.passwordCheckBeforeLogin(), auth_controller_1.authController.login);
router.post("/verify", auth_check_1.auth.tokenCheck(tokenTypeList_enum_1.TokenEnumList.action), auth_controller_1.authController.verify);
router.post("/password/forgot", (0, validate_1.validate)(user_validator_1.validUser.emailCheck), auth_check_1.auth.emailCheck(), auth_controller_1.authController.forgotPassword);
router.patch("/password/forgot", auth_check_1.auth.tokenCheck(tokenTypeList_enum_1.TokenEnumList.action), (0, validate_1.validate)(user_validator_1.validUser.passwordCheck), auth_check_1.auth.newPasswordCheck(), auth_controller_1.authController.renewPassword);
router.patch("/password/change", auth_check_1.auth.tokenCheck(tokenTypeList_enum_1.TokenEnumList.access), (0, validate_1.validate)(user_validator_1.validUser.changePasswordCheck), auth_check_1.auth.oldPasswordCheck(), auth_check_1.auth.newPasswordCheck(), auth_controller_1.authController.renewPassword);
router.get("/refresh", auth_check_1.auth.tokenCheck(tokenTypeList_enum_1.TokenEnumList.refresh), auth_controller_1.authController.refresh);
router.get("/log-out/me", auth_check_1.auth.tokenCheck(tokenTypeList_enum_1.TokenEnumList.access), auth_controller_1.authController.log_outCurrent);
router.get("/log-out/all", auth_check_1.auth.tokenCheck(tokenTypeList_enum_1.TokenEnumList.access), auth_controller_1.authController.log_outAll);
exports.authRouter = router;
